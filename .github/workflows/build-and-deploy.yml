name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: taskdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/taskdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build & run unit tests (H2)
        run: mvn clean test -Dspring.profiles.active=test

      - name: Build & run integration tests (Postgres)
        run: mvn verify -Dspring.profiles.active=ci

  docker-build:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/tasklist-app:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/tasklist-app:latest

  deploy-vm:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main'  # Only deploy from main branch
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Copy deploy script to VM
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          port: ${{ secrets.VM_PORT }}
          key: ${{ secrets.VM_SSH_KEY }}
          source: "deploy.sh"
          target: "~/tasklist/deploy.sh"

      - name: Run deploy script on VM
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          port: ${{ secrets.VM_PORT }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            chmod +x ~/tasklist/deploy.sh
            ~/tasklist/deploy.sh